/var/www/html/laravel.basic/vendor/symfony/http-foundation/Response.php

Route::get('/', function () {
    return [1, 2, 3];

    return response('Hello World', 200)
    		->header('Content-Type', 'text/plain');

	return response()->json(['name' => 'name']);
	return response()->view('test.test')->withData($data);
	return response()->download('test.txt','mask.txt');
	return back()->withInput();

    $content = view('test.test')->withData($data)->render();

    return response($content)
            ->header('Content-Type', $type)
            ->header('X-Header-One', 'Header Value')
            ->header('X-Header-Two', 'Header Value');

    return response($content)
            ->withHeaders([
                'Content-Type' => $type,
                'X-Header-One' => 'Header Value',
                'X-Header-Two' => 'Header Value',
            ]);

    return response($content)
                ->header('Content-Type', $type)
                ->cookie('name', 'value', $minutes);

    return redirect('home/dashboard');

    return redirect()->route('login');
    return redirect()->route('profile', ['id' => 1]);

    return redirect()->action('HomeController@index');
    return redirect()->action('UserController@profile', ['id' => 1]);

    return response()
            ->json(['name' => 'Abigail', 'state' => 'CA'])
            ->withCallback($request->input('callback'));

    return response()->download($pathToFile);
	return response()->download($pathToFile, $name, $headers);
	return response()->download($pathToFile)->deleteFileAfterSend(true);

	return response()->file($pathToFile);
	return response()->file($pathToFile, $headers);
});

Response Macros

	/var/www/html/laravel.basic/app/Providers/AppServiceProvider.php
set
	<?php
	namespace App\Providers;

	use Illuminate\Support\ServiceProvider;
	use Illuminate\Support\Facades\Response;

	class ResponseMacroServiceProvider extends ServiceProvider
	{
	    public function boot()
	    {
	        Response::macro('caps', function ($value) {
	            return Response::make(strtoupper($value));
	        });
	    }
	}

use
	return response()->caps('foo');