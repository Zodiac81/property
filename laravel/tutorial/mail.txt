НАСТРОЙКА
	app/config/mail.php

	if app/config/mail.php driver -> 'log' все отправляемые письма будут записываться в лог-файл фреймворка и не будут рассылаться

	Mail::send('emails.welcome', array('key' => 'value'), function($message)
	{
	    $message->from('us@example.com', 'Laravel');
	    $message->to('foo@example.com', 'Джон Смит')->subject('Привет!');

	    $message->from($address, $name = null);
		$message->sender($address, $name = null);
		$message->to($address, $name = null);
		$message->cc($address, $name = null);
		$message->bcc($address, $name = null);
		$message->replyTo($address, $name = null);
		$message->subject($subject);
		$message->priority($level);
		$message->attach($pathToFile, array $options = []);

		// Attach a file from a raw $data string...
		$message->attachData($data, $name, array $options = []);

		// Get the underlying SwiftMailer message instance...
		$message->getSwiftMessage();
	});

	// emails.welcome - view
	// array('key' => 'value') - data for view
	// 'foo@example.com', 'Джон Смит' -> 1) кому, 2) как представится
	// 'us@example.com', 'Laravel' - ot kogo
	// 'us@example.com', 'Laravel' - ot kogo


	Mail::send(array('html.view', 'text.view'), $data, $callback); - use text-shablon

	Mail::raw('Текст письма', function($message)
	{
	    $message->from('us@example.com', 'Laravel');

	    $message->to('foo@example.com')->cc('bar@example.com');
	});

Помещение сообщения в очередь отправки
	Mail::queue('emails.welcome', $data, function($message)
	{
	    $message->to('foo@example.com', 'Джон Смит')->subject('Привет!');
	});



	app/config/mail.php

		driver -> 'mail' 			использовать стандартную функцию PHP mail
		driver -> 'smtp' 			использовать SMTP-сервер
		driver -> 'log' 			использовать log-фаил