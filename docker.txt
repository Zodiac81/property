1)	Install
	
	sudo apt-get update
	sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
	sudo apt-add-repository 'deb https://apt.dockerproject.org/repo ubuntu-xenial main'
	sudo apt-get update
	apt-cache policy docker-engine		//
										// 	docker-engine:
											  Installed: (none)
											  Candidate: 1.11.1-0~xenial
											  Version table:
											     1.11.1-0~xenial 500
											        500 https://apt.dockerproject.org/repo ubuntu-xenial/main amd64 Packages
											     1.11.0-0~xenial 500
											        500 https://apt.dockerproject.org/repo ubuntu-xenial/main amd64 Packages
	sudo apt-get install -y docker-engine
	sudo systemctl status docker

	sudo usermod -aG docker $(whoami)

	1.1)
		Docker-composer
			sudo curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
			sudo chmod +x /usr/local/bin/docker-compose
			docker-compose --version 		//	docker-compose version 1.19.0, build 1719ceb

2) Use

	docker [опция] [команда] [аргументы]
	docker

	docker search ubuntu 			// 	search
	docker pull ubuntu:latest		// 	pull
	docker run nginx 				// 	run
		--name shot_name   			// 	name for conteiner
		-P 							// 	open conteiner`s ports
		-p 8080:80					// 	8080 - in, 80 - out
		-v ~/content/default.conf:/etc/nginx/conf.d/default.conf
									// 	связать
		-d 							// 	запустить в фоновом режиме (открепит (detach) терминал)
		--rm 						// 	remove conteiner in the end
		-it nginx bash 				// 	run and stai in terminal


	docker exec -it nginx  bash

	docker restart nginx 			// 	перезапустить контейнер
	docker port nginx 				// 	show conteiner`s ports

	docker images 					// 	see

	docker run -it nginx 			// 	root@d9b100f2f636:/#

	docker ps [-a] 					// 	all conteiners (and hlam)

	docker stop nginx 				// 	stop conteiner

	docker rmi -f docker-nginx  	// 	remove image
				-f принудительно
	docker rm -f nginx  			// 	remove conteiner
				-f принудительно




	docker container ls

docker exec  composer install

Kill all running containers
	docker kill $(docker ps -q)
	docker rm $(docker ps -a -q)
	docker rmi $(docker images -q -f dangling=true)
	docker rmi $(docker images -q)
	

Kill docker

	sudo apt-get purge -y docker-engine
	sudo apt-get autoremove -y --purge docker-engine
	sudo rm -rf /var/lib/docker
	sudo apt-get purge -y docker-engine docker docker.io docker-ce
	sudo apt-get autoremove -y --purge docker-engine docker docker.io docker-ce
	sudo apt-get autoclean


docker run -d -P --name static-site prakhar1989/static-site
				-d открепит (detach) терминал
				-P сделает все открытые порты публичными и случайными
				--name это имя, которое мы хотим дать контейнеру
docker port static-site



~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  TEST ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

nginx
	sudo docker pull nginx
	sudo docker run --name docker-nginx -p 80:80 nginx 					// 	запуска этого контейнера
				run это команда создания нового контейнера
				--name Флаг как мы указываем имя контейнера (если оставлено пустым один назначается для нас, как nostalgic_hopper из шага 2)
				-p указывает порт, который мы размещаем в формате -p local-machine-port:internal-container-port. В этом случае мы сопоставляем порт 80 в контейнере с портом 80 на сервере
				nginx это имя изображения на dockerhub (мы загрузили это раньше командой pull, но Docker сделает это автоматически, если изображение отсутствует)

	docker rm docker-nginx -f			//	удалить существующий docker-nginx

	docker run --name docker-nginx -p 13280:80 -d nginx
				-d флаг для запуска этого контейнера в фоновом режиме

	docker stop docker-ngin x				// 	остановить контейнер

	docker run --name docker-nginx -p 13280:80 -d -v ~/docker-nginx/html:/usr/share/nginx/html nginx
				Мы видим, что новым дополнением к команде -v ~/docker-nginx/html:/usr/share/nginx/html является наша ссылка на объем.
				-v указывает, что мы связываем том
				часть слева от : местоположения нашего каталога / каталога на нашей виртуальной машине ( ~/docker-nginx/html)
				часть справа от : местоположения, с которым мы связываемся в нашем контейнере ( /usr/share/nginx/html)

	docker cp docker-nginx:/etc/nginx/conf.d/default.conf ./default.conf 			// 	взять файл конфигурации nginx из контейнера docker-nginx в текущую дирректорию

	docker run --name docker-nginx -p 13280:80 -v ~/docker-nginx/html:/usr/share/nginx/html -v ~/docker-nginx/default.conf:/etc/nginx/conf.d/default.conf -d nginx



		http://geekyplatypus.com/dockerise-your-php-application-with-nginx-and-php7-fpm/
docker + nginx + php (docker-compose.yml)
	touch ./docker-compose.yml
		web:
			image: nginx:latest
			ports:
			- "8080:80"

	docker-compose up
	mkdir ./code
	nano ./docker-compose.yml
		web:
		  web:
			  image: nginx:latest
			  ports:
			    - "8080:80"
			  volumes:
			    - ./code:/usr/share/nginx/html
			    - ./default.conf:/etc/nginx/conf.d/default.conf
	touch ./default.conf
